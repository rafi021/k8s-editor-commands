apiVersion: apps/v1
kind: Deployment
metadata:
	name: laravel-web
	labels:
		app: laravel
		component: web
spec:
	replicas: 2
	revisionHistoryLimit: 3
	strategy:
		type: RollingUpdate
		rollingUpdate:
			maxSurge: 1
			maxUnavailable: 0
	selector:
		matchLabels:
			app: laravel
			component: web
	template:
		metadata:
			labels:
				app: laravel
				component: web
		spec:
			initContainers:
				- name: wait-for-mysql
					image: busybox:1.36
					command: ["/bin/sh", "-c"]
					args:
						- >-
							echo "Waiting for MySQL";
							until nc -z mysql 3306; do echo 'MySQL not ready'; sleep 3; done;
							echo "MySQL is up";
				- name: wait-for-redis
					image: busybox:1.36
					command: ["/bin/sh", "-c"]
					args:
						- >-
							echo "Waiting for Redis";
							until nc -z redis 6379; do echo 'Redis not ready'; sleep 3; done;
							echo "Redis is up";
				- name: run-migrations
					image: your-laravel-image:latest  # Replace with your built Laravel image
					imagePullPolicy: IfNotPresent
					envFrom:
						- configMapRef:
								name: laravel-config
						- secretRef:
								name: laravel-secret
					command: ["/bin/sh", "-c"]
					args:
						- >-
							php artisan config:cache &&
							php artisan migrate --force;
			containers:
				- name: laravel
					image: your-laravel-image:latest  # Replace with your built Laravel image
					imagePullPolicy: IfNotPresent
					envFrom:
						- configMapRef:
								name: laravel-config
						- secretRef:
								name: laravel-secret
					ports:
						- containerPort: 9000
							name: php-fpm
					readinessProbe:
						httpGet:
							path: /healthz
							port: 8080
						initialDelaySeconds: 15
						periodSeconds: 10
					livenessProbe:
						httpGet:
							path: /healthz
							port: 8080
						initialDelaySeconds: 60
						periodSeconds: 30
					resources:
						requests:
							cpu: 250m
							memory: 256Mi
						limits:
							cpu: 500m
							memory: 512Mi
					volumeMounts:
						- name: storage
							mountPath: /var/www/html/storage
					# Sidecar nginx serving HTTP on 8080 proxying to php-fpm 9000
				- name: nginx
					image: nginx:1.25-alpine
					ports:
						- containerPort: 8080
							name: http
					volumeMounts:
						- name: nginx-conf
							mountPath: /etc/nginx/conf.d/default.conf
							subPath: default.conf
						- name: storage
							mountPath: /var/www/html/storage
					resources:
						requests:
							cpu: 50m
							memory: 64Mi
						limits:
							cpu: 200m
							memory: 128Mi
			volumes:
				- name: nginx-conf
					configMap:
						name: laravel-nginx-config
						items:
							- key: default.conf
								path: default.conf
				- name: storage
					emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
	name: laravel-web
	labels:
		app: laravel
		component: web
spec:
	type: ClusterIP
	selector:
		app: laravel
		component: web
	ports:
		- port: 80
			targetPort: http
			protocol: TCP
			name: http
